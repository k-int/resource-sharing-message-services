apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

// Springboot plugin builds a single jar from code and all deps

buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
  }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

  compile group: 'log4j', name: 'log4j', version: '1.2.5'
  compile group: 'com.k_int', name: 'A2J', version: '1.0.2'
  compile group: 'com.k_int', name: 'iso10161', version: '1.0'
  compile group: 'org.codehaus.groovy', name:'groovy-all', version:'2.4.10'
  compile group: 'org.springframework.boot', name:'spring-boot-starter', version: '1.5.10.RELEASE'
  compile group: 'org.springframework.boot', name:'spring-boot-starter-amqp', version: '1.5.10.RELEASE'

  testCompile 'junit:junit:4.12'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
}


group = 'com.k_int'
sourceCompatibility = 1.8
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
    // baseName = 'gs-spring-boot'
    // version =  '0.1.0'
}


// See https://docs.gradle.org/current/userguide/maven_plugin.html#uploading_to_maven_repositories
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://~/.m2/repository/")
        }
    }
}

test {
    systemProperties 'logback.configurationFile' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}


/**
 * Generic support for building docker images for SpringBoot Apps
 */
task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = rootProject.name
  dockerfile = file('src/main/docker/Dockerfile')

  doFirst {
    // Rename the app jar to "app.jar" so that the Dockerfile does not require renames
    copy {
      from "${project.buildDir}/libs"
      into stageDir
      include "${rootProject.name}-${version}.jar"
      rename("${rootProject.name}-${version}.jar", "app.jar")
    }
  }

  doLast {
    println "Run the Docker Container"
    println "docker run -ti -p 8080:8080 $project.group/$applicationName:$version"
  }
} 
